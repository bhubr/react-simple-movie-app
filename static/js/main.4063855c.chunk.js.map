{"version":3,"sources":["components/Header.js","components/Movie.js","helpers/isLessThanOneYear.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Movie","movie","title","picture","isNew","release","date","Date","pastYear","getYear","setYear","getTime","isLessThanOneYear","className","src","alt","MovieList","movies","map","id","App","props","state","this","fetchMovies","axios","get","then","res","data","setState","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAAe,SAASA,IACtB,OAAO,iD,MCgBMC,MAbf,YAA2B,IAAVC,EAAS,EAATA,MACPC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,QACTC,ECDO,SAA2BC,GAExC,IAAMC,EAAO,IAAIC,KACXC,EAAW,KAAOF,EAAKG,UAAY,EAIzC,OAHAH,EAAKI,QAAQF,GAEO,IAAID,KAAKF,GACVM,UAAYL,EAAKK,UDNtBC,CADsBX,EAAZI,SAExB,OACE,sBAAKQ,UAAU,QAAf,UACGT,GAAS,qBAAKS,UAAU,YAAf,iBACV,qBAAKC,IAAKX,EAASY,IAAKb,IACxB,6BAAKA,IACL,8CECSc,MAVf,YAAgC,IAAXC,EAAU,EAAVA,OACnB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAOC,KAAI,SAACjB,GAAD,OACV,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMkB,UC8BXC,G,wDA9Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXL,OAAQ,IAHO,E,qDAOnB,WACEM,KAAKC,gB,yBAGP,WAAe,IAAD,OAGZC,IACGC,IAFD,oEAGCC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACV,GAAD,OAAY,EAAKa,SAAS,CAAEb,gB,oBAGtC,WAAU,IACAA,EAAWM,KAAKD,MAAhBL,OACR,OACE,sBAAKJ,UAAU,gBAAf,UACE,cAACd,EAAD,IACA,cAAC,EAAD,CAAWkB,OAAQA,W,GA1BTc,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4063855c.chunk.js","sourcesContent":["export default function Header() {\n  return <h1>React Movie App</h1>;\n}\n","import React from 'react';\nimport isLessThanOneYear from '../helpers/isLessThanOneYear';\nimport './Movie.css';\n\nfunction Movie({ movie }) {\n  const { title, picture, release } = movie;\n  const isNew = isLessThanOneYear(release);\n  return (\n    <div className=\"Movie\">\n      {isNew && <div className=\"Movie-new\">New</div>}\n      <img src={picture} alt={title} />\n      <h3>{title}</h3>\n      <span>&#9733;</span>\n    </div>\n  );\n}\n\nexport default Movie;\n","/**\n * Return true if date is less than one year from now\n *\n * @param {string} release Release date in YYYY-MM-DD format\n */\nexport default function isLessThanOneYear(release) {\n  // Create date object, set it one year in the past\n  const date = new Date();\n  const pastYear = 1900 + date.getYear() - 1;\n  date.setYear(pastYear);\n\n  const releaseDate = new Date(release);\n  return releaseDate.getTime() > date.getTime();\n}\n","import React from 'react';\nimport Movie from './Movie';\n\nfunction MovieList({ movies }) {\n  return (\n    <div className=\"MovieList\">\n      {movies.map((movie) => (\n        <Movie key={movie.id} movie={movie} />\n      ))}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import { Component } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies() {\n    const apiUrl =\n      'https://my-json-server.typicode.com/bhubr/micro-movie-api/movies';\n    axios\n      .get(apiUrl)\n      .then((res) => res.data)\n      .then((movies) => this.setState({ movies }));\n  }\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className=\"App container\">\n        <Header />\n        <MovieList movies={movies} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}